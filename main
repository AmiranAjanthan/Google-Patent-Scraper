#imports
from serpapi import *
import xlsxwriter
import datetime
import tkinter as tk
from tkinter import ttk
   
def Patent_Creator():
    print("Patent Creator Started")
    parameters = {
      "engine": "google_patents",
      "q": query.get(),
      "before": upper_range.get(),
      "after": lower_range.get(),
      "assignee": assignee_val.get(),
      "inventor": inventor_val.get(),
      "status": status_val.get(),
      "country": country_val.get(),
      "language": language_val.get(),
      "type": types_val.get(),
      "litigation": litigation_val.get(),
      "num": "100",
      "api_key": "d5aa3c29a9a69177f1939ff857e10bc048ab1823634397cfee80dff6e9f20383"
    }
   
    params = {k: v for k, v in parameters.items() if v}
    
    #Extracting data from patents page
    search = GoogleSearch(params)
    results = search.get_dict()
    try:
        organic_results = results["organic_results"]
        print("Results done")
    except KeyError:
        popup = tk.Tk()
        popup.title("Google Patent Scraper")
        frame1 = tk.Frame(popup)
        frame1.pack()

        popup_frame =tk.LabelFrame(frame1, text="No Results Found")
        popup_frame.grid(row= 0, column=0, padx=20, pady=10)
        popup_label = tk.Label(popup_frame, text ="The inputs have resulted 0 search results, please try again")
        popup_label.grid(column=0, row=0)
    
 
        
    

    # Create Excel Sheet
    workbook = xlsxwriter.Workbook("Google_Patent_Data.xlsx")
    worksheet = workbook.add_worksheet("Sheet 1")
    
    # Titles for Excel Sheet
    worksheet.write(0, 0, "Patent Number")
    worksheet.write(0, 1, "Patent Title")
    worksheet.write(0, 2, "Priority Date")
    worksheet.write(0, 3, "Anticipated Expiration Date")
    worksheet.write(0, 4, "Method of Support")
    worksheet.write(0, 5, "Analyst Comments")
    
    #Numbers into Excel Sheet
    num_index = 1 
    for result in organic_results:
        title = result.get("patent_id")
        title = title[7:-3]
        worksheet.write(num_index, 0, title) 
        num_index +=1
        
    #Titles into Excel Sheet
    title_index = 1 
    for result in organic_results:
        title = result.get("title")
        worksheet.write(title_index, 1, title) 
        title_index +=1
    
    #Priority Date into Excel Sheet
    pdate_index = 1
    for result in organic_results:
        priority_date = result.get("priority_date")
        worksheet.write(pdate_index, 2, priority_date) 
        pdate_index += 1
    
    #Expiration date(calculated by adding 20 years to the priority date)
    fdate_index = 1
    for result in organic_results:
        filing_date_str = result.get("priority_date")
        try:
            filing_date = datetime.datetime.strptime(filing_date_str, "%Y-%m-%d")
        except TypeError:
            continue  # Skip this result if the date format is invalid
        expiration_date = filing_date + datetime.timedelta(days=365.25 * 20)
        expiration_date_str = expiration_date.strftime("%Y-%m-%d")
        worksheet.write(fdate_index, 3, expiration_date_str)
        fdate_index += 1
        
    
    
    worksheet.autofit()
    workbook.close() 
    
    
main_window = tk.Tk()
main_window.title("IPRG Patent Scraper")

frame = tk.Frame(main_window)
frame.pack()

parameter_frame =tk.LabelFrame(frame, text="Main Input Parameters")
parameter_frame.grid(row= 0, column=0, padx=20, pady=10)

query_label = tk.Label(parameter_frame, text ="Key Search Term:")
query_label.grid(column=0, row=0)
query = tk.Entry(parameter_frame)
query.grid(column=0, row=1)

lower_range_label = tk.Label(parameter_frame, text ="Lower Priority Date Range")
lower_range_label.grid(column=1, row=0)
lower_range = tk.Entry(parameter_frame)
lower_range.grid(column=1, row=1)

upper_range_label = tk.Label(parameter_frame, text ="Upper Priority Date Range")
upper_range_label.grid(column=2, row=0)
upper_range = tk.Entry(parameter_frame)
upper_range.grid(column=2, row=1)

assignee_val_label = tk.Label(parameter_frame, text ="Assignee")
assignee_val_label.grid(column=0, row=2)
assignee_val = tk.Entry(parameter_frame)
assignee_val.grid(column=0, row=3)

status_val_label = tk.Label(parameter_frame, text ="Status")
status_val_label.grid(column=1, row=2)
status_val = ttk.Combobox(parameter_frame, values=["GRANT","APPLICATION"])
status_val.grid(column=1, row=3)

for widget in parameter_frame.winfo_children():
    widget.grid_configure(padx=10, pady=5)

additional_frame = tk.LabelFrame(frame, text="Additional Search Parameters")
additional_frame.grid(row=1, column=0, sticky="news", padx=20, pady=10)

inventor_val_label = tk.Label(additional_frame, text ="Inventor")
inventor_val_label.grid(column=0, row=0)
inventor_val = tk.Entry(additional_frame)
inventor_val.grid(column=0, row=1)

country_val_label = tk.Label(additional_frame, text ="Country")
country_val_label.grid(column=1, row=0)
country_val = ttk.Combobox(additional_frame, values=["CA","CN","GB","IN","JP","RU","US"])
country_val.grid(column=1, row=1)

language_val_label = tk.Label(additional_frame, text ="Language")
language_val_label.grid(column=2, row=0)
language_val = tk.Entry(additional_frame)
language_val.grid(column=2, row=1)

types_val_label = tk.Label(additional_frame, text ="Type")
types_val_label.grid(column=0, row=2)
types_val = ttk.Combobox(additional_frame, values=["PATENT","DESIGN"])
types_val.grid(column=0, row=3)

litigation_val_label = tk.Label(additional_frame, text ="Has Related Litigation")
litigation_val_label.grid(column=1, row=2)
litigation_val = ttk.Combobox(additional_frame, values=["YES", "NO"])
litigation_val.grid(column=1, row=3)

for widget in additional_frame.winfo_children():
    widget.grid_configure(padx=10, pady=5)

submit_frame = tk.LabelFrame(frame, text="Submit Button")
submit_frame.grid(row=2, column=0, sticky="news", padx=20, pady=10)

button = tk.Button(submit_frame, text="Submit", command=Patent_Creator)
button.grid(row=0, column=0, sticky="news", padx=20, pady=10)

main_window.mainloop()






